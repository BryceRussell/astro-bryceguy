---
import { Element } from 'astro-json-element';
import { Icon } from 'astro-icon';

export interface Props {
    max?: string|number;
    rate?: string|number;
    total?: string|number;
    icons?: {};
    icon?: {
        active?: {};
        half?: {};
        inactive?: {};
        [attrs: string]: any;
    };
    commas?: boolean;
    defaults?: boolean;
    [attrs: string]: any;
}
const { 
    max=5,
    rate=0,
    total,
    icons={},
    icon={},
    commas=true,
    defaults=false,
    ...attrs
} = Astro.props as Props;

const {
    active={},
    half={},
    inactive={},
    ...icon_attrs
} = icon;

//Default login
const default_attrs = {
	tag: "div",
    style: defaults&&"display:flex;align-items:center;gap:.25rem;",
    _span: defaults&&total&&{
        tag: "span",
        text: `(${commas?addCommas(total):total})`,
        style: "line-height:1;font-size:14px;color:#ccc;",
    },
	...attrs
};

const default_icons = {
	tag: "div",
    style: "display:flex;align-items:center;",
    ...icons
};

const default_icon = {
    style: `min-height:.5rem;min-width:.5rem;${defaults?"height:1rem;width:1rem;":""}`,
	...icon_attrs
};

const default_active = {
    name: "star-active",
    ...default_icon,
    ...active
};
const default_half = {
    name: "star-half",
    ...default_icon,
    ...half,
};

const default_inactive = {
    name: "star-inactive",
    ...default_icon,
    ...inactive
};

//Clac
const activeStars = Math.floor(+rate);
const halfStars = +rate - activeStars
const inactiveStars = Math.floor(+max - +rate);

//Utility
function addCommas(num) {
    if (typeof num == 'number') return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    if (typeof num == 'string') return num.replace(/[^\d]/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    return "0"
}
---

<Element {...default_attrs}>
    <Element {...default_icons}>
        {[...Array(activeStars)].map(() => {
            return <Icon {...default_active}/>
        })}
        
        {halfStars > 0 && <Icon {...default_half}/>}

        {inactiveStars > 0 && [...Array(inactiveStars)].map(() => {
            return <Icon {...default_inactive}/>
        })}
    </Element>
</Element>